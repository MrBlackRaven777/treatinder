/*
 * Petfinder API
 * The Petfinder API allows you to access the Petfinder database of hundreds of thousands of pets ready for adoption and over ten thousand animal welfare organizations. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@petfinder.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.petfinder.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * AnimalType
 */

import javax.annotation.processing.Generated;

@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-12-10T13:31:36.545254300+02:00[Asia/Jerusalem]")

public class AnimalType {
  @SerializedName("name")
  private String name = null;

  @SerializedName("coats")
  private List<String> coats = null;

  @SerializedName("colors")
  private List<String> colors = null;

  @SerializedName("genders")
  private List<String> genders = null;

  @SerializedName("_links")
  private AnimalTypeLinks _links = null;

  public AnimalType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AnimalType coats(List<String> coats) {
    this.coats = coats;
    return this;
  }

  public AnimalType addCoatsItem(String coatsItem) {
    if (this.coats == null) {
      this.coats = new ArrayList<String>();
    }
    this.coats.add(coatsItem);
    return this;
  }

   /**
   * Get coats
   * @return coats
  **/
  @Schema(description = "")
  public List<String> getCoats() {
    return coats;
  }

  public void setCoats(List<String> coats) {
    this.coats = coats;
  }

  public AnimalType colors(List<String> colors) {
    this.colors = colors;
    return this;
  }

  public AnimalType addColorsItem(String colorsItem) {
    if (this.colors == null) {
      this.colors = new ArrayList<String>();
    }
    this.colors.add(colorsItem);
    return this;
  }

   /**
   * Get colors
   * @return colors
  **/
  @Schema(description = "")
  public List<String> getColors() {
    return colors;
  }

  public void setColors(List<String> colors) {
    this.colors = colors;
  }

  public AnimalType genders(List<String> genders) {
    this.genders = genders;
    return this;
  }

  public AnimalType addGendersItem(String gendersItem) {
    if (this.genders == null) {
      this.genders = new ArrayList<String>();
    }
    this.genders.add(gendersItem);
    return this;
  }

   /**
   * Get genders
   * @return genders
  **/
  @Schema(description = "")
  public List<String> getGenders() {
    return genders;
  }

  public void setGenders(List<String> genders) {
    this.genders = genders;
  }

  public AnimalType _links(AnimalTypeLinks _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public AnimalTypeLinks getLinks() {
    return _links;
  }

  public void setLinks(AnimalTypeLinks _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnimalType animalType = (AnimalType) o;
    return Objects.equals(this.name, animalType.name) &&
        Objects.equals(this.coats, animalType.coats) &&
        Objects.equals(this.colors, animalType.colors) &&
        Objects.equals(this.genders, animalType.genders) &&
        Objects.equals(this._links, animalType._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, coats, colors, genders, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnimalType {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    coats: ").append(toIndentedString(coats)).append("\n");
    sb.append("    colors: ").append(toIndentedString(colors)).append("\n");
    sb.append("    genders: ").append(toIndentedString(genders)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
