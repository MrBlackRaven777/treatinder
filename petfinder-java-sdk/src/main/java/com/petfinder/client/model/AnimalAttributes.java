/*
 * Petfinder API
 * The Petfinder API allows you to access the Petfinder database of hundreds of thousands of pets ready for adoption and over ten thousand animal welfare organizations. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: help@petfinder.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.petfinder.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * AnimalAttributes
 */

import javax.annotation.processing.Generated;

@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-12-10T13:31:36.545254300+02:00[Asia/Jerusalem]")

public class AnimalAttributes {
  @SerializedName("spayed_neutered")
  private Boolean spayedNeutered = null;

  @SerializedName("house_trained")
  private Boolean houseTrained = null;

  @SerializedName("declawed")
  private Boolean declawed = null;

  @SerializedName("special_needs")
  private Boolean specialNeeds = null;

  @SerializedName("shots_current")
  private Boolean shotsCurrent = null;

  public AnimalAttributes spayedNeutered(Boolean spayedNeutered) {
    this.spayedNeutered = spayedNeutered;
    return this;
  }

   /**
   * Get spayedNeutered
   * @return spayedNeutered
  **/
  @Schema(description = "")
  public Boolean isSpayedNeutered() {
    return spayedNeutered;
  }

  public void setSpayedNeutered(Boolean spayedNeutered) {
    this.spayedNeutered = spayedNeutered;
  }

  public AnimalAttributes houseTrained(Boolean houseTrained) {
    this.houseTrained = houseTrained;
    return this;
  }

   /**
   * Get houseTrained
   * @return houseTrained
  **/
  @Schema(description = "")
  public Boolean isHouseTrained() {
    return houseTrained;
  }

  public void setHouseTrained(Boolean houseTrained) {
    this.houseTrained = houseTrained;
  }

  public AnimalAttributes declawed(Boolean declawed) {
    this.declawed = declawed;
    return this;
  }

   /**
   * Get declawed
   * @return declawed
  **/
  @Schema(description = "")
  public Boolean isDeclawed() {
    return declawed;
  }

  public void setDeclawed(Boolean declawed) {
    this.declawed = declawed;
  }

  public AnimalAttributes specialNeeds(Boolean specialNeeds) {
    this.specialNeeds = specialNeeds;
    return this;
  }

   /**
   * Get specialNeeds
   * @return specialNeeds
  **/
  @Schema(description = "")
  public Boolean isSpecialNeeds() {
    return specialNeeds;
  }

  public void setSpecialNeeds(Boolean specialNeeds) {
    this.specialNeeds = specialNeeds;
  }

  public AnimalAttributes shotsCurrent(Boolean shotsCurrent) {
    this.shotsCurrent = shotsCurrent;
    return this;
  }

   /**
   * Get shotsCurrent
   * @return shotsCurrent
  **/
  @Schema(description = "")
  public Boolean isShotsCurrent() {
    return shotsCurrent;
  }

  public void setShotsCurrent(Boolean shotsCurrent) {
    this.shotsCurrent = shotsCurrent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnimalAttributes animalAttributes = (AnimalAttributes) o;
    return Objects.equals(this.spayedNeutered, animalAttributes.spayedNeutered) &&
        Objects.equals(this.houseTrained, animalAttributes.houseTrained) &&
        Objects.equals(this.declawed, animalAttributes.declawed) &&
        Objects.equals(this.specialNeeds, animalAttributes.specialNeeds) &&
        Objects.equals(this.shotsCurrent, animalAttributes.shotsCurrent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(spayedNeutered, houseTrained, declawed, specialNeeds, shotsCurrent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnimalAttributes {\n");
    
    sb.append("    spayedNeutered: ").append(toIndentedString(spayedNeutered)).append("\n");
    sb.append("    houseTrained: ").append(toIndentedString(houseTrained)).append("\n");
    sb.append("    declawed: ").append(toIndentedString(declawed)).append("\n");
    sb.append("    specialNeeds: ").append(toIndentedString(specialNeeds)).append("\n");
    sb.append("    shotsCurrent: ").append(toIndentedString(shotsCurrent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
